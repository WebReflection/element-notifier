self.elementNotifier=function(e){"use strict";const t=!0,n=!1,d="querySelectorAll";function o(e){this.observe(e,{subtree:t,childList:t})}return e.notify=(e,r,s)=>{const i=(n,o,r,s,l)=>{for(let c=0,{length:a}=n;c<a;c++){const a=n[c];(l||d in a)&&(s?o.has(a)||(o.add(a),r.delete(a),e(a,s)):r.has(a)||(r.add(a),o.delete(a),e(a,s)),l||i(a[d]("*"),o,r,s,t))}},l=new(s||MutationObserver)((e=>{for(let d=new Set,o=new Set,r=0,{length:s}=e;r<s;r++){const{addedNodes:s,removedNodes:l}=e[r];i(l,d,o,n,n),i(s,d,o,t,n)}}));return l.add=o,l.add(r||document),l},e}({});
